# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.
# This workflow will build a package using Gradle and then publish it to GitHub packages when a release is created
# For more information see: https://github.com/actions/setup-java/blob/main/docs/advanced-usage.md#Publishing-using-gradle

name: Gradle Package

on:
  workflow_dispatch:
    inputs:
      release:
        type: boolean
        description: Whether to make a release
        default: false
        required: true
      branch:
        type: choice
        description: Which branch to use
        default: 'moe-master'
        required: true
        options:
          - 'moe-master'
          - 'moe-svm'
        
  
  release:
    types: [ published ]

jobs:
  verify-release-config:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    
    steps:
      - name: Test for release
        if: ${{ inputs.release }}
        run: echo "Building release version"
      
      - name: Test for snapshot
        if: ${{ inputs.release == false }}
        run: echo "Building snapshot version"

      - name: Echo selected branch
        run: echo "Using branch ${{ inputs.branch }}"

  prebuild:
    runs-on: macos-15
    permissions:
      contents: read
      packages: write

    steps:
    - uses: actions/checkout@v3
    - name: Set up JDK 21
      uses: actions/setup-java@v4
      with:
        java-version: 21
        distribution: 'graalvm'
        server-id: github # Value of the distributionManagement/repository/id field of the pom.xml
        settings-path: ${{ github.workspace }} # location for the settings.xml file

    - name: build
      run: |
          sudo mv /Library/Developer/CommandLineTools/SDKs/* /tmp
          sudo mv /Applications/Xcode.app /Applications/Xcode.app.bak
          sudo mv /Applications/Xcode_16.2.app /Applications/Xcode.app
          sudo xcode-select -switch /Applications/Xcode.app
          xcodebuild -version
          brew install autogen autoconf automake libtool pkg-config wget isl cloog cmake gpg ant maven mpfr libmpc repo premake texinfo
          mkdir moe-ci
          cd moe-ci
          repo init -u https://github.com/multi-os-engine/manifest.git -b ${{ inputs.branch }}
          repo sync
          cd moe
          ./gradlew :prebuilts:llvm
          
    - name: Upload Artifact
      uses: actions/upload-artifact@v4
      with:
          name: llvm
          path: moe-ci/moe/prebuilts/llvm/macos/lib/libclang.dylib
  build:
    needs: [prebuild, verify-release-config]
    runs-on: macos-15
    permissions:
      contents: read
      packages: write

    steps:
    - uses: actions/checkout@v3
    - name: Set up JDK 21
      uses: actions/setup-java@v4
      with:
        java-version: 21
        distribution: 'graalvm'
        server-id: github # Value of the distributionManagement/repository/id field of the pom.xml
        settings-path: ${{ github.workspace }} # location for the settings.xml file

    - name: Setup prebuild
      run: |
          sudo mv /Library/Developer/CommandLineTools/SDKs/* /tmp
          sudo mv /Applications/Xcode.app /Applications/Xcode.app.bak
          sudo mv /Applications/Xcode_16.2.app /Applications/Xcode.app
          sudo xcode-select -switch /Applications/Xcode.app
          xcodebuild -version
          brew install autogen autoconf automake libtool pkg-config wget isl cloog cmake gpg ant maven mpfr libmpc repo premake texinfo
          mkdir moe-ci
          cd moe-ci
          repo init -u https://github.com/multi-os-engine/manifest.git -b ${{ inputs.branch }}
          repo sync
          cd moe
          ./gradlew :prebuilts:mingw

    - uses: actions/download-artifact@v4
      with:
          name: llvm
          path: moe-ci/moe/prebuilts/llvm/macos/lib/
          
    - name: Build MOE
      run: |
          cd moe-ci/moe/
          ./gradlew :tools:moe-sdk:sdk
          ./gradlew :tools:moe-sdk:sdk
          
    - name: Snapshot build deploy
      if: ${{ inputs.release == false }}
      run: |
          cd moe-ci/moe/
          ./gradlew :tools:moe-sdk:publish -PossrhUsername=${{ secrets.ossrhUsername }} -PossrhPassword=${{ secrets.ossrhPassword }}
          ./gradlew :tools:moe-gradle:publish -PossrhUsername=${{ secrets.ossrhUsername }} -PossrhPassword=${{ secrets.ossrhPassword }}
          
    - name: Import GPG key
      if: ${{ inputs.release }}
      id: import_gpg
      uses: crazy-max/ghaction-import-gpg@1c6a9e9d3594f2d743f1b1dd7669ab0dfdffa922
      with:
        gpg-private-key: ${{ secrets.MOE_RELEASE_PRIVATE_KEY }}
        passphrase: ${{ secrets.MOE_RELEASE_PRIVATE_KEY_PASSPHRASE }}
        
    - name: Release deploy
      if: ${{ inputs.release }}
      run: |
          cd moe-ci/moe
          ./gradlew :tools:moe-sdk:publish -PossrhUsername=${{ secrets.ossrhUsername }} -PossrhPassword=${{ secrets.ossrhPassword }} -Psigning.gnupg.keyId=${{ secrets.MOE_RELEASE_PRIVATE_KEY_ID }}
          ./gradlew :tools:moe-gradle:publish -PossrhUsername=${{ secrets.ossrhUsername }} -PossrhPassword=${{ secrets.ossrhPassword }} -Psigning.gnupg.keyId=${{ secrets.MOE_RELEASE_PRIVATE_KEY_ID }}

    - name: Trigger manual upload to Central Repository
      if: ${{ inputs.release }}
      run: |
          curl -X POST \
            -H "Authorization: Bearer $(echo -n '${{ secrets.NEXUS_USERNAME }}:${{ secrets.NEXUS_PASSWORD }}' | base64)" \
            -H "Content-Type: application/json" \
            https://ossrh-staging-api.central.sonatype.com/manual/upload/defaultRepository/org.multi-os-engine
